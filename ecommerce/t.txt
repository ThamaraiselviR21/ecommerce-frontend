useEffect(() => {
    const fetchProducts = async () => {
        try {
            const res = await axios.get(`${process.env.REACT_APP_API_URL}/products`, {
                params: searchParams,
            });
            setProducts(res.data.products);
        } catch (error) {
            console.error("Error fetching products:", error);
        }
    };

    fetchProducts();
}, [searchParams]);
                        <img src={product.images[0].image} alt={product.name} height="500" width="500" />
                            <img src={item.product.images[0].image} alt="Laptop" height="90" width="115" />
 

 //order _API_URL
 const order=require("../models/Order");
const products=require("../models/Product")

exports.createOrder=async (req,res) => {
    try {
        const cart=req.body;
        const amount=Math.floor(cart.reduce((acc,item)=>(acc + item.product.price * item.qty),0));
        const status='pending';
        console.log(req.body,"data","\n",amount);

      const orders= await order.create({cart,amount,status});
       // Updating product stock
     //  cart.forEach( async (item)=> {
     // const product = await products.findById(item.product._id);
     // product.stock = product.stock - item.qty;
     // await product.save();
       // })

        
        return res.status(200).json({message:"success",orders});


    } catch (error) {
       return res.status(500).json({message:error.message})
    }
}


const jwt =require("jsonwebtoken");
const users=require("../models/users");

exports.isAuth=async (req,res,next) => {
    try {
        const token=req.headers.token;
        if(!token){
            return res.status(403).json({message:error.message})
        }
        const decoded=jwt.verify(token,process.env.JWT_SECRET);
        req.user=await users.findById(decoded._id);
        next();
        
    } catch (error) {
        return res.status(403).json({message:"login first"})
        
    }
    
}